Metric	Count
Total Rfam IDs in File 1	64
Total Rfam IDs in File 2	161
Present in both files	61
Missing from File 1	100
Unique to File 1	3
Match percentage	37.9%
So Unique IDs present in "Rfam_3d_list" that are not present in "Rfam_from_search_161_fams" are:
1. RF00008
2. RF00522
3. RF02553

############################################################################################################################
In file "Rfam_Final_combined_3d_List.xlsx", we have combined list of 164 (161+3) 3D families.
############################################################################################################################




############################################################################################################################
In file "remaining_families.csv", we have now 4014 non 3D families after processing.
Rfam Coverage Summary
----------------------------
Total families in seed file: 4178
Already covered (from Excel): 164
Filtered out (covered): 164
Remaining (not covered): 4014
Output file includes: 4014 families
############################################################################################################################




#############################################################################################################################
File: human_seqs_from_fams.py
----------------------------------------------
This Python script extracts human RNA sequences (identified by _9606) from an Rfam seed alignment file, skipping families already listed in a given Excel file. 
It:
Loads covered Rfam IDs from Excel
Parses the seed file to find human sequences
Skips families already covered
Saves remaining human sequences grouped by family to a text file

Output: human_remaining_final.txt with sequence IDs and sequences for each uncovered family.
#############################################################################################################################




################################################################################################################################
File: Human seqs with stat info
---------------------------------------------
Purpose: Extract human RNA sequences from an Rfam seed alignment file, excluding families listed in an Excel file.
Inputs:
Rfam.seed: alignment file with RNA families and sequences
Rfam_Final_combined_3d_List.xlsx: Excel file listing already-covered Rfam families

Process:
Loads covered Rfam IDs from Excel
Parses the seed file to find human sequences (_9606)
Skips families already listed in Excel

Calculates per-family and per-sequence stats:
Length (with and without gaps)
GC content

Output:
human_remaining_with_stat_info.txt: detailed report with family summaries and sequence stats
#################################################################################################################################


#####################################################################################################################################################
File: fam_species_stats.py
This Python script analyzes an Rfam seed alignment file to generate species-level statistics for RNA families not listed in a given Excel file. 
It:
Loads covered Rfam IDs from Excel
Parses the seed file to count sequences per species (based on NCBI tax IDs)
Used ete3 to resolve species names from taxonomic IDs

Summarizes:
Total sequences per family
Human sequence count
Other species sorted by abundance

Saves the report to rfam_species_stats.txt
#####################################################################################################################################################



#####################################################################################################################################################
# Extract Rfam IDs and Family Names from Seed File to Excel

File name: All_Rfam_IDs_extraction_from_seed_file.py
This code parses an Rfam seed file to extract each family's accession ID and name, then saves the list to an Excel sheet.

Output file : rfam_id_name_list.xlsx
#####################################################################################################################################################

# Code to extract unique rfam ids from pdb_full_region.txt file

File name: Code to extract unique rfam ids from pdb full region file.py
This script reads pdb_full_region.txt file, extracts the first column containing Rfam IDs, identifies all unique entries, and saves them to an Excel file.

Output file: unique_rfam_ids.xlsx
#######################################################################################################################################################







######################################################################################################################################################
pdb_full_region.txt : provides the mapping of current families mapped to pdb id and chains. This is latest update of Sep 15,2025
Link to fetch weekly updates: https://ftp.ebi.ac.uk/pub/databases/Rfam/.preview/
